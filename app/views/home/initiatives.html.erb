<div class="cd-intro-block">
    <div id="side_menu">
      <%= render 'layouts/side_menu'%>
    </div>
    <div class="wrapper content-right text-bg">
      <div id="googlemaps"></div>
      <div class="text-width">
        <h1>Iniciativas ambientales</h1>
        <h4>Es importante que participemos activamente evaluando la gestión de nuestros municipios para incidir positivamente en su trabajo. Selecciona tu comuna para revisar sus proyectos.</h4>
      </div>
      <div id="initiatives_form" class="pull-left">
        <%= form_tag initiatives_path, :method => :get, remote: true do |f| %>
          <%= select_tag :area, options_from_collection_for_select(Area.joins(:posts).where('posts.area_id is not null').order(:name).distinct, "id", "name", ""), include_blank:  t('.select_area'), class: "chosen-select", id: "initiatives_area_select", onchange: "$(this).parent('form').submit();"%>
        <% end %>
      </div>
      <a href="#0" class='btn btn-primary' data-action="show-projects" >Ver iniciativas</a>
      <div id="initiatives_list"></div>
    </div>
</div>

  <div class="cd-projects-wrapper">
    <ul class="cd-slider" style="width:5088px;">
      <% unless @initiatives.nil? %>
        <% @initiatives.each_with_index do |i, index|%>
        <li class="<%= (index===0) ? 'current' : '' %>">
          <a href="" data-id="<%= i.id %>" id="post_thumb_<%=i.id %>">
            <% if i.image.size.nil? %>
              <img src="/assets/img.png" alt="project image" class="img-responsive" style="height: 278px;">
            <% else %>
              <%= image_tag i.image.url, :alt => "project image", class:"img-responsive", style:"height: 278px;" %>
            <% end %>
            <% unless i.average("problem").nil? %>
        			<span class="pull-right text-light"><%= i.avg_rating %> / 7 <svg xmlns="https://www.w3.org/2000/svg" width="34" height="33" viewBox="0 0 34 33"><path fill="none" stroke="#ACC74D" d="M23.604 19.633c3.038 4.31 3.496 7.613 3.875 12.034-3.96-1.737-7.296-3.29-10.334-7.6-3.037 4.31-6.372 5.863-10.333 7.6.379-4.421.837-7.723 3.875-12.034-4.914-1.646-6.862-4.252-9.687-7.6 4.194-.995 7.356-1.646 12.27 0 0-5.327 1.662-8.228 3.875-12.033 2.214 3.805 3.846 6.713 3.875 12.033 4.884-1.639 8.077-.995 12.271 0-2.826 3.348-4.773 5.954-9.687 7.6z" stroke-linecap="round" stroke-linejoin="round"/></svg></span>
        		<% end %>
            <div class="project-info">
              <h5> <%= i.title %> </h5>
              <p> <%= i.body.truncate(37, :omission => "...más") %> </p>
            </div>
          </a>
        </li>
        <% end %>
      <% end %>
    </ul>

    <ul class="cd-slider-navigation cd-img-replace">
      <li><a href="#0" class="prev">Prev</a></li>
      <li><a href="#0" class="next">Next</a></li>
    </ul> <!-- .cd-slider-navigation -->
  </div> <!-- .cd-projects-wrapper -->


  <div class="cd-project-content">
    <div>
      <a href="" class="close cd-img-replace">Close</a>
      <h2></h2>
      <p></p>
    </div>
  </div>



<script type="text/javascript">
$(function() {
  // function squeezebox_setup(){

    var intro = $('.cd-intro-block'),
    projectsContainer = $('.cd-projects-wrapper'),
    projectsSlider = projectsContainer.children('.cd-slider'),
    singleProjectContent = $('.cd-project-content'),
    sliderNav = $('.cd-slider-navigation');

    var resizing = false;

    //if on desktop - set a width for the projectsSlider element
    setSliderContainer();
    $(window).on('resize', function(){
      //on resize - update projectsSlider width and translate value
      if( !resizing ) {
        (!window.requestAnimationFrame) ? setSliderContainer() : window.requestAnimationFrame(setSliderContainer);
        resizing = true;
      }
    });

    //show the projects slider if user clicks the show-projects button
    intro.on('click', 'a[data-action="show-projects"]', function(event) {
      event.preventDefault();
      intro.addClass('projects-visible');
      projectsContainer.addClass('projects-visible');
      //animate single project - entrance animation
      setTimeout(function(){
        showProjectPreview($('.cd-slider').children('li').eq(0));
      }, 200);
    });

    intro.on('click', function(event) {
      //projects slider is visible - hide slider and show the intro panel
      if( intro.hasClass('projects-visible') && !$(event.target).is('a[data-action="show-projects"]') ) {
        intro.removeClass('projects-visible');
        projectsContainer.removeClass('projects-visible');
      }
    });

    //select a single project - open project-content panel

    projectsContainer.on('click', '.cd-slider a', function(event) {
      var mq = checkMQ();
      event.preventDefault();
      if( $(this).parent('li').next('li').is('.current') && (mq == 'desktop') ) {
        prevSides($('.cd-slider'));
      } else if ( $(this).parent('li').prev('li').prev('li').prev('li').is('.current')  && (mq == 'desktop') ) {
        nextSides($('.cd-slider'));
      } else {
        var id = $(this).attr("data-id");
        var project= $('.cd-project-content');
        $.ajax({
          url: "/posts/" + id,
          dataType: "script"
        })
        .done(function( msg ) {
          project.addClass('is-visible');
          //
          $(".star").each(function() {
            var $readonly = ($(this).attr('data-readonly') == 'true');
            var $half     = ($(this).attr('data-enable-half') == 'true');
            var $halfShow = ($(this).attr('data-half-show') == 'true');
            var $single   = ($(this).attr('data-single') == 'true');
            $(this).raty({
              score: function() {
                return $(this).attr('data-rating')
              },
              number: function() {
                return $(this).attr('data-star-count')
              },
              half:        $half,
              halfShow:    $halfShow,
              single:      $single,
              path:        $(this).attr('data-star-path'),
              starOn:      $(this).attr('data-star-on'),
              starOff:     $(this).attr('data-star-off'),
              starHalf:    $(this).attr('data-star-half'),
              cancel:      $(this).attr('data-cancel'),
              cancelPlace: $(this).attr('data-cancel-place'),
              cancelHint:  $(this).attr('data-cancel-hint'),
              cancelOn:    $(this).attr('data-cancel-on'),
              cancelOff:   $(this).attr('data-cancel-off'),
              noRatedMsg:  $(this).attr('data-no-rated-message'),
              round:       $(this).attr('data-round'),
              space:       $(this).attr('data-space'),
              target:      $(this).attr('data-target'),
              targetText:  $(this).attr('data-target-text'),
              targetType:  $(this).attr('data-target-type'),
              targetFormat: $(this).attr('data-target-format'),
              targetScoret: $(this).attr('data-target-score'),
              readOnly: $readonly,
              click: function(score, evt) {
                var _this = this;
                if (score == null) { score = 0; }
                $.post('<%= Rails.application.class.routes.url_helpers.rate_path %>',
                {
                  score: score,
                  dimension: $(this).attr('data-dimension'),
                  id: $(this).attr('data-id'),
                  klass: $(this).attr('data-classname')
                },
                function(data) {
                  if(data) {
                    // success code goes here ...

                    if ($(_this).attr('data-disable-after-rate') == 'true') {
                      $(_this).raty('set', { readOnly: true, score: score });
                    }
                  }
                });
              }
            });
          });
          //
        })
        .error(function( msg ) {
          alert( "Data Error");
        });
      }
    });

    //close single project content
    singleProjectContent.on('click', '.close', function(event){
      event.preventDefault();
      singleProjectContent.removeClass('is-visible');
    });

    //go to next/pre slide - clicking on the next/prev arrow
    sliderNav.on('click', '.next', function(){
      nextSides($('.cd-slider'));
    });
    sliderNav.on('click', '.prev', function(){
      prevSides($('.cd-slider'));
    });

    //go to next/pre slide - keyboard navigation
    $(document).keyup(function(event){
      var mq = checkMQ();
      if(event.which=='37' &&  intro.hasClass('projects-visible') && !(sliderNav.find('.prev').hasClass('inactive')) && (mq == 'desktop') ) {
        prevSides($('.cd-slider'));
      } else if( event.which=='39' &&  intro.hasClass('projects-visible') && !(sliderNav.find('.next').hasClass('inactive')) && (mq == 'desktop') ) {
        nextSides($('.cd-slider'));
      } else if(event.which=='27' && singleProjectContent.hasClass('is-visible')) {
        singleProjectContent.removeClass('is-visible');
      }
    });

    $('.cd-slider').on('swipeleft', function(){
      var mq = checkMQ();
      if( !(sliderNav.find('.next').hasClass('inactive')) && (mq == 'desktop') ) nextSides($('.cd-slider'));
    });

    $('.cd-slider').on('swiperight', function(){
      var mq = checkMQ();
      if ( !(sliderNav.find('.prev').hasClass('inactive')) && (mq == 'desktop') ) prevSides($('.cd-slider'));
    });

    function showProjectPreview(project) {
      if(project.length > 0 ) {
        setTimeout(function(){
          project.addClass('slides-in');
          showProjectPreview(project.next());
        }, 50);
      }
    }

    function checkMQ() {
      //check if mobile or desktop device
      return window.getComputedStyle(document.querySelector('.cd-projects-wrapper'), '::before').getPropertyValue('content').replace(/'/g, "").replace(/"/g, "");
    }

    function setSliderContainer() {
      var mq = checkMQ();
      if(mq == 'desktop') {
        var slides = $('.cd-slider').children('li'),
        slideWidth = slides.eq(0).width();
        var marginLeft = 0;
        if (typeof $('.cd-slider').children('li').eq(1).css('margin-left') !== 'undefined') {
          marginLeft = Number($('.cd-slider').children('li').eq(1).css('margin-left').replace('px', ''))
        }
        var sliderWidth = ( slideWidth + marginLeft )*( slides.length + 1 ) + 'px',
        slideCurrentIndex = $('.cd-slider').children('li.current').index();
        $('.cd-slider').css('width', sliderWidth);
        ( slideCurrentIndex != 0 ) && setTranslateValue($('.cd-slider'), (  slideCurrentIndex * (slideWidth + marginLeft) + 'px'));
      } else {
        $('.cd-slider').css('width', '');
        setTranslateValue($('.cd-slider'), 0);
      }
      resizing = false;
    }

    function nextSides(slider) {
      var actual = slider.children('.current'),
      index = actual.index(),
      following = actual.nextAll('li').length,
      width = actual.width(),
      marginLeft = Number(slider.children('li').eq(1).css('margin-left').replace('px', ''));

      index = (following > 4 ) ? index + 3 : index + following - 2;
      //calculate the translate value of the slider container
      translate = index * (width + marginLeft) + 'px';

      slider.addClass('next');
      setTranslateValue(slider, translate);
      slider.one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(){
        updateSlider('next', actual, slider, following);
      });

      if( $('.no-csstransitions').length > 0 ) updateSlider('next', actual, slider, following);
    }

    function prevSides(slider) {
      var actual = slider.children('.previous'),
      index = actual.index(),
      width = actual.width(),
      marginLeft = Number(slider.children('li').eq(1).css('margin-left').replace('px', ''));

      translate = index * (width + marginLeft) + 'px';

      slider.addClass('prev');
      setTranslateValue(slider, translate);
      slider.one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(){
        updateSlider('prev', actual, slider);
      });

      if( $('.no-csstransitions').length > 0 ) updateSlider('prev', actual, slider);
    }

    function updateSlider(direction, actual, slider, numerFollowing) {
      if( direction == 'next' ) {

        slider.removeClass('next').find('.previous').removeClass('previous');
        actual.removeClass('current');
        if( numerFollowing > 4 ) {
          actual.addClass('previous').next('li').next('li').next('li').addClass('current');
        } else if ( numerFollowing == 4 ) {
          actual.next('li').next('li').addClass('current').prev('li').prev('li').addClass('previous');
        } else {
          actual.next('li').addClass('current').end().addClass('previous');
        }
      } else {

        slider.removeClass('prev').find('.current').removeClass('current');
        actual.removeClass('previous').addClass('current');
        if(actual.prevAll('li').length > 2 ) {
          actual.prev('li').prev('li').prev('li').addClass('previous');
        } else {
          ( !slider.children('li').eq(0).hasClass('current') ) && slider.children('li').eq(0).addClass('previous');
        }
      }

      updateNavigation();
    }

    function updateNavigation() {
      //update visibility of next/prev buttons according to the visible slides
      var current = projectsContainer.find('li.current');
      (current.is(':first-child')) ? sliderNav.find('.prev').addClass('inactive') : sliderNav.find('.prev').removeClass('inactive');
      (current.nextAll('li').length < 3 ) ? sliderNav.find('.next').addClass('inactive') : sliderNav.find('.next').removeClass('inactive');
    }

    function setTranslateValue(item, translate) {
      item.css({
        '-moz-transform': 'translateX(-' + translate + ')',
        '-webkit-transform': 'translateX(-' + translate + ')',
        '-ms-transform': 'translateX(-' + translate + ')',
        '-o-transform': 'translateX(-' + translate + ')',
        'transform': 'translateX(-' + translate + ')',
      });
    }



  // }
});
</script>

<script src="//maps.googleapis.com/maps/api/js?sensor=false&key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>"></script>

<script type="text/javascript">
  // The latitude and longitude of your business / place
  var position = [-33.446165, -70.665767];
  function showGoogleMaps() {
      var latLng = new google.maps.LatLng(position[0], position[1]);
      var mapOptions = {
          zoom: 10, // initialize zoom level - the max value is 21
          streetViewControl: false, // hide the yellow Street View pegman
          scaleControl: false, // allow users to zoom the Google Map
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          center: latLng
      };
      map = new google.maps.Map(document.getElementById('googlemaps'),
          mapOptions);
      // <% vitacura = Area.find_by_name 'Vitacura' %>
      // <% geojson_polygon = RGeo::GeoJSON.encode vitacura.geom%>
      <% post_areas = Post.select(:area_id).distinct %>
      <% post_areas.each do |post_area| %>
        <% area = Area.find(post_area.area_id) %>
          <% unless area.geom.nil? %>
            var contentString = '<div id="content">'+' <%= area.name %>, <%= area.posts_average %> / 7'+ '</div>';
            var infowindow_<%= area.id %> = new google.maps.InfoWindow({
              content: contentString
            });
            var latlong = {lat: -25.363, lng: 131.044};
            var marker_<%= area.id %> = new google.maps.Marker({
              position: <%= raw area.centroid_coordinates %>,
              map: map,
              title: '<%= area.name %>',
              draggable: false,
              animation: google.maps.Animation.DROP
            });
            marker_<%= area.id %>.addListener('click', function() {
              infowindow_<%= area.id %>.open(map, marker_<%= area.id %>);
            });
            // var geojson_polygon = JSON.parse('<%= raw area.geojson %>')
            // map.data.addGeoJson(geojson_polygon);
          <% end %>
      <% end %>
  }
  google.maps.event.addDomListener(window, 'load', showGoogleMaps);
</script>
